---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/auth/":
    post:
      summary: sign up usuario
      tags:
      - Usuario
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_usuario"
  "/auth/sign_in":
    post:
      summary: sign in usuario
      tags:
      - Usuario
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_usuario"
  "/usuarios":
    get:
      summary: list usuarios
      tags:
      - Usuario
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/usuarios/{id}":
    parameters:
    - name: id
      in: path
      description: id del producto
      required: true
      schema:
        type: string
    get:
      summary: show current usuario
      tags:
      - Usuario
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
    delete:
      summary: delete usuario
      tags:
      - Usuario
      security:
      - bearer_auth: []
      responses:
        '204':
          description: successful
  "/carritos":
    get:
      summary: list carritos
      tags:
      - Carritos
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/carritos/{id}":
    parameters:
    - name: id
      in: path
      description: id del carrito
      required: true
      schema:
        type: string
    get:
      summary: show carrito
      tags:
      - Carritos
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
    delete:
      summary: vacia el carrito y pasa las ordenes del carrito a compras, tambien
        envia un email de confirmacion de compra
      tags:
      - Carritos
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '204':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_carrito"
  "/compras":
    get:
      summary: list compras
      tags:
      - Compras
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/compras/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: muesta una compra especifica
      tags:
      - Compras
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
  "/ordenes":
    get:
      summary: list ordenes
      tags:
      - Orden
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
    post:
      summary: se crean ordenes y se les asigna a un carrito
      tags:
      - Orden
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_ordene"
  "/ordenes/{id}":
    parameters:
    - name: id
      in: path
      description: id de la orden
      required: true
      schema:
        type: string
    get:
      summary: show orden
      tags:
      - Orden
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
    patch:
      summary: Se edita una orden del carrito del usuario
      tags:
      - Orden
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_ordene"
    put:
      summary: update ordene
      tags:
      - Orden
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_ordene"
    delete:
      summary: delete ordene
      tags:
      - Orden
      security:
      - bearer_auth: []
      responses:
        '204':
          description: successful
  "/productos":
    get:
      summary: list productos
      tags:
      - Producto
      responses:
        '200':
          description: successful
    post:
      summary: create producto
      tags:
      - Producto
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_producto"
  "/productos/{id}":
    parameters:
    - name: id
      in: path
      description: id del producto
      required: true
      schema:
        type: string
    get:
      summary: show one producto
      tags:
      - Producto
      security:
      - bearer_auth: []
      responses:
        '200':
          description: successful
    patch:
      summary: update producto
      tags:
      - Producto
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
    put:
      summary: update producto
      tags:
      - Producto
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '200':
          description: successful
    delete:
      summary: delete producto
      tags:
      - Producto
      security:
      - bearer_auth: []
      responses:
        '204':
          description: successful
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearer_format: JWT
  schemas:
    usuario:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        nombre:
          type: string
        rol:
          type: string
        numero_casa:
          type: integer
        telefono:
          type: integer
        calle:
          type: string
        ciudad:
          type: string
        estado:
          type: string
        pais:
          type: string
        carrito:
          type: array
          "$ref": "#/components/schemas/carrito"
        compra:
          "$ref": "#/components/schemas/compra"
      required:
      - email
      - password
      - nombre
      - numero_casa
      - telefono
      - calle
      - ciudad
      - estado
      - pais
      - carrito
      - compra
    new_usuario:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        rol:
          type: string
      required:
      - email
      - password
      - name
    carrito:
      type: object
      properties:
        total:
          type: number
        usuario_id:
          type: integer
        orders:
          type: array
          items:
            "$ref": "#/components/schemas/ordene"
    new_carrito:
      type: object
      properties:
        producto_id:
          type: integer
        usuario_id:
          type: integer
        uid:
          type: string
        required:
        - producto_id
        - usuario_id
        - uid
    producto:
      type: object
      properties:
        nombre:
          type: string
        precio:
          type: number
        descripcion:
          type: string
        imagen:
          type: string
      required:
      - nombre
      - precio
      - descripcion
      - imagen
    new_producto:
      type: object
      properties:
        nombre:
          type: string
        precio:
          type: number
        descripcion:
          type: string
        imagen:
          type: string
        uid:
          type: string
      required:
      - nombre
      - precio
      - descripcion
      - imagen
    compra:
      type: object
      properties:
        total:
          type: number
        entrega:
          type: string
        orders:
          type: array
          items:
            "$ref": "#/components/schemas/ordene"
    new_compra:
      type: object
      properties:
        uid:
          type: string
    ordene:
      type: object
      properties:
        cantidad:
          type: integer
        producto_id:
          type: integer
        usuario_id:
          type: integer
        producto:
          "$ref": "#/components/schemas/producto"
    new_ordene:
      type: object
      properties:
        cantidad:
          type: integer
        producto_id:
          type: integer
        usuario_id:
          type: integer
        uid:
          type: integer
      required:
      - cantidad
      - producto_id
      - usuario_id
      - uid
servers:
- url: https://secure-lowlands-54066.herokuapp.com/
  variables:
    defaultHost:
      default: localhost:3000
